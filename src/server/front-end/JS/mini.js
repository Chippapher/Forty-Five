class Message{constructor(e,t){this.method=e,this.data=t}toString(){return`{method:${this.method}, data:${this.data}}`}}class Card{constructor(e){if("string"==typeof e)if(e.length>1){let t="";switch(2==e.length?(t=e.substring(0,1),this.suit=e.substring(1)):(t=e.substring(0,2),this.suit=e.substring(2)),t){case"K":this.value=13;break;case"Q":this.value=12;break;case"J":this.value=11;break;case"A":this.value=1;break;default:this.value=parseInt(t)}this.element=null}else this.value=null,this.suit=e}getElement(){if(null!=this.element)return this.element;let e=document.createElement("img"),t="",a="";if(null!=this.value){switch(this.value){case 13:t+="king";break;case 12:t+="queen";break;case 11:t+="jack";break;case 2:t+="deuce";break;case 1:t+="ace";break;default:t+=this.value}switch(a="",this.value){case 13:a+="K";break;case 12:a+="Q";break;case 11:a+="J";break;case 1:a+="A";break;default:a+=this.value}switch(this.suit){case"S":a+="S",t+=" of spades";break;case"C":a+="C",t+=" of clubs";break;case"H":a+="H",t+=" of hearts";break;case"D":a+="D",t+=" of diamonds"}}else switch(this.suit){case"S":a="spade",t=" Spades";break;case"C":a="club",t=" Clubs";break;case"H":a="heart",t=" Hearts";break;case"D":a="diamond",t=" Diamonds"}return e.src=`./cards_png/PNG/${a}.png`,e.alt=t,e.id=this.value+this.suit,e.classList.add("inactive"),this.element=e,e}toString(){let e="";switch(this.value){case 13:e+="K";break;case 12:e+="Q";break;case 11:e+="J";break;case 1:e+="A";break;default:e+=this.value}return e+=this.suit}equals(e){return e instanceof Card&&(this.value==e.value&&this.suit==e.suit)}}let game={awaitingPlaysRefresh:!1,hand:[],eligblePlays:[],playzone:[],opponent:{name:"",matchPoints:0,handPoints:0},player:{name:"",matchPoints:0,handPoints:0},trump:{}},ws=new WebSocket("ws://24.224.183.243:9000");function getName(){ws.send(new Message("getName"))}function getOpponentName(){ws.send(new Message("getOpponentName"))}function getHand(){ws.send(JSON.stringify(new Message("getHand")))}function awaitCard(){console.log("starting waiting"),ws.send(new Message("getEligiblePlays")),console.log("end waiting")}function awaitRob(){askQuestion("would you like to rob?",()=>{let e=t=>{sendRob(game.hand.filter(e=>e.getElement()===t.target)[0]),game.hand.forEach(t=>{t.getElement().removeEventListener("click",e),t.getElement().classList.remove("clickable"),t.getElement().classList.add("inactive")})};for(const t of game.hand)t.getElement().addEventListener("click",e),t.getElement().classList.add("clickable"),t.getElement().classList.remove("inactive")},()=>sendRob(null))}function askQuestion(e,t,a){document.getElementById("questionText").innerHTML=e;let n=document.getElementById("questionBox");n.classList.remove("hidden"),document.getElementById("yes").addEventListener("click",()=>{t(),n.classList.add("hidden")}),document.getElementById("no").addEventListener("click",()=>{a(),n.classList.add("hidden")})}function sendCard(e){let t=new Message("getCard",e.toString());ws.send(JSON.stringify(t)),ws.send(JSON.stringify(new Message("getHand"))),game.eligblePlays=[],syncEligiblePlaysState(),game.hand.forEach(e=>markInactive(e))}function sendRob(e){let t=new Message("getRob",null!=e?e.toString():null);ws.send(JSON.stringify(t)),ws.send(JSON.stringify(new Message("getHand")))}function addToPlayzone(e){e instanceof Card&&(game.playzone.push(e),document.getElementById("playzone").appendChild(e.getElement()))}function resetPlayzone(){setTimeout(()=>{for(const e of game.playzone)document.getElementById("playzone").removeChild(e.getElement());game.playzone=[]},1e3)}function setTrump(e){e instanceof Card?(game.trump instanceof Card&&document.getElementById("deck").removeChild(game.trump.getElement()),document.getElementById("deck").appendChild(e.getElement()),game.trump=e):null==e&&(game.trump instanceof Card&&document.getElementById("deck").removeChild(game.trump.getElement()),e=new Card(game.trump.suit),document.getElementById("deck").appendChild(e.getElement()),game.trump=e,game.trump.getElement().classList.remove("inactive"))}function updateOpponentMatchPoints(e){document.getElementById("opponent").getElementsByClassName("match")[0].innerHTML=`Match: ${e}`}function updateOpponentHandPoints(e){document.getElementById("opponent").getElementsByClassName("handPoints")[0].innerHTML=`Hand: ${e}`}function updateMatchPoints(e){document.getElementById("you").getElementsByClassName("match")[0].innerHTML=`Match: ${e}`}function updatetHandPoints(e){document.getElementById("you").getElementsByClassName("handPoints")[0].innerHTML=`Hand: ${e}`}function syncEligiblePlaysState(){let e=document.getElementById("hand").getElementsByTagName("img");for(const t of e)0===game.eligblePlays.filter(e=>e.getElement()===t).length?(t.classList.add("inactive"),t.classList.remove("clickable")):(t.classList.remove("inactive"),t.classList.add("clickable"));let t=e=>{e.target.classList.contains("clickable")&&(sendCard(game.hand.filter(t=>t.getElement()===e.target)[0]),game.hand.forEach(e=>e.getElement().removeEventListener("click",t)))};for(const e of game.hand)e.getElement().addEventListener("click",t)}function markInactive(e){e.getElement().classList.add("inactive"),e.getElement().remove("clickable")}function syncHandState(){let e=document.getElementById("hand"),t=e.getElementsByTagName("img");for(const a of t)0===game.hand.filter(e=>e.getElement()===a).length&&e.removeChild(a);for(const e of game.hand){let t=document.getElementById("hand"),a=t.getElementsByTagName("img"),n=!0;for(const t of a)e.getElement()==t&&(n=!1);n&&t.appendChild(e.getElement())}}ws.addEventListener("message",e=>{let t=JSON.parse(e.data);switch(console.log(t),t.method){case"setTrump":{let e=null;null!=t.data&&(e=new Card(t.data)),setTrump(e);break}case"getName":document.getElementById("you").getElementsByTagName("span")[0].innerHTML=t.data;break;case"getOpponentName":document.getElementById("opponent").getElementsByTagName("span")[0].innerHTML=t.data;break;case"getRob":awaitRob();break;case"getCard":awaitCard();break;case"getHand":{let e=[];t.data.forEach(t=>e.push(new Card(t)));let a=game.hand.filter(t=>e.some(e=>e.equals(t))),n=e.filter(e=>!game.hand.some(t=>t.equals(e)));game.hand=a.concat(n),syncHandState();break}case"getEligiblePlays":{let e=[];t.data.forEach(t=>e.push(new Card(t)));let a=game.hand.filter(t=>e.some(e=>e.equals(t)));console.log(a),game.eligblePlays=a,syncEligiblePlaysState();break}case"notifyHandChange":getHand();break;case"setOpponentMatchPoints":updateOpponentMatchPoints(t.data);break;case"setOpponentHandPoints":updateOpponentHandPoints(t.data);break;case"setMatchPoints":updateMatchPoints(t.data);break;case"setHandPoints":updatetHandPoints(t.data);break;case"addToPlayzone":addToPlayzone(new Card(t.data));break;case"resetPlayzone":resetPlayzone()}console.log(e.data)}),ws.addEventListener("open",e=>{getName(),getOpponentName()});